apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.traderev.codingchallenge"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', "UNSPLASH_API_KEYS", unsplash_api_keys
        buildConfigField 'String', "UNSPLASH_BASE_URL", unsplash_base_url
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', "unsplash_api_keys", unsplash_api_keys
            buildConfigField 'String', "UNSPLASH_BASE_URL", unsplash_base_url
        }
    }

    dataBinding {
        enabled = true
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "com.android.support") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "26.+"
            }
        }
    }
}

dependencies {

    def androidx_version = "1.0.2"
    def material_version = "1.0.0"
    def lifecycle_version = "2.2.0-alpha02"
    def constraint_layout_version = "1.1.3"
    def junit_version = "4.12"
    def androidx_test_runner_version = "1.2.0"
    def espresso_core_version = "3.2.0"
    def retrofit_version = "2.6.0"
    def rx_android_version = "2.1.1"
    def dagger2_version = "2.15"
    def javax_annotation = "1.0"
    def javax_inject = "1"
    def photo_view_version = "2.3.0"
    def picasso_version = "2.71828"
    def paging_version = "2.1.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //AndroidX dependencies
    implementation "androidx.appcompat:appcompat:$androidx_version"
    implementation "androidx.core:core-ktx:$androidx_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-core:$lifecycle_version"
    implementation "com.google.android.material:material:$material_version"

    //RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    //Dagger2
    implementation "com.google.dagger:dagger:$dagger2_version"
    implementation "com.google.dagger:dagger-android:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger2_version"

    //Annotations
    compileOnly "javax.annotation:jsr250-api:$javax_annotation"
    implementation "javax.inject:javax.inject:$javax_inject"
    implementation "androidx.annotation:annotation:$androidx_version"

    //Picasso
    implementation "com.squareup.picasso:picasso:$picasso_version"

    //Custom Photo View
    implementation "com.github.chrisbanes:PhotoView:$photo_view_version"

    //Paging
    implementation "androidx.paging:paging-runtime:$paging_version"

    //Test Libraries
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"

}
