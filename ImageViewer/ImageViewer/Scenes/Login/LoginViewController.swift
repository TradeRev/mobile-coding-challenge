//
//  LoginViewController.swift
//  ImageViewer
//
//  Created by Zakhar Sukhanov on 2017-12-08.
//  Copyright (c) 2017 Zakhar Sukhanov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import WebKit

protocol LoginDisplayLogic: class
{
  func displayPhotoGrid()
  func displayError(_ error: Login.LoginError)
}

class LoginViewController: UIViewController, LoginDisplayLogic, WKUIDelegate
{
  var interactor: LoginBusinessLogic?
  var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

  //var webView: WKWebView!
  @IBOutlet weak var webView: WKWebView_IBWrapper!
  
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = LoginInteractor()
    let presenter = LoginPresenter()
    let router = LoginRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View lifecycle
  
//  override func loadView() {
//    // https://www.questarter.com/q/xcode-9-gm-wkwebview-nscoding-support-was-broken-in-previous-versions-27_46221577.html
//    // http://www.openradar.me/34791377
//    let webConfiguration = WKWebViewConfiguration()
//    webView = WKWebView(frame: .zero, configuration: webConfiguration)
//    webView.uiDelegate = self
//    webView.translatesAutoresizingMaskIntoConstraints = false
//    view = webView
//  }
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doAuthenticate()
  }
  
  // MARK: Do something
  
  fileprivate func doAuthenticate()
  {
    let request = Login.AuthenticateRequest(clientArea: self.webView)
    interactor?.doAuthenticate(request: request)
  }
  
  
  func displayPhotoGrid() {
    router?.routeToPhotoGrid()
  }
  
  
  func displayError(_ error: Login.LoginError) {
    self.displayError(error.err.description)
  }
}

// http://ioscake.com/wkwebview-in-interface-builder.html
class WKWebView_IBWrapper: WKWebView {
  required convenience init?(coder: NSCoder) {
    let config = WKWebViewConfiguration()
    //config.suppressesIncrementalRendering = true //any custom config you want to add
    self.init(frame: .zero, configuration: config)
    self.translatesAutoresizingMaskIntoConstraints = false
  }
}
